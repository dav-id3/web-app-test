openapi: 3.0.2
info:
  version: 0.0.1
  title: Web app test api
paths:
  /base:
    post:
      tags:
        - test
      summary: post new data
      description: post new data
      requestBody:
        description: array of new data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/test.postDataRequest'
      responses:
        '200':
          description: OK
  /account/get:
    get:
      tags:
        - account
      summary: get account record
      description: get account record
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account.getRecordResponse'
  /account/post:
    post:
      tags:
        - account
      summary: post new account record
      description: post new account record
      requestBody:
        description: array of new account record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account.postRecordRequest'
      responses:
        '201':
          description: Created
  /account/update:
    put:
      tags:
        - account
      summary: update account record
      description: update account record
      requestBody:
        description: updated account record
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/account.updateRecordRequest'
      responses:
        '202':
          description: Accepted
  '/account/delete/{deleted_id}':
    delete:
      tags:
        - account
      summary: get account record
      description: get account record
      parameters:
        - in: path
          name: deleted_id
          required: true
          schema:
            type: string
          description: deleted account id
      responses:
        '204':
          description: Success
  '/account/delete_regular/{deleted_id}/{is_repeatation_deleted}':
    delete:
      tags:
        - account
      summary: delete regular record
      description: delete regular record
      parameters:
        - in: path
          name: deleted_id
          required: true
          schema:
            type: string
          description: deleted account id
        - in: path
          name: is_repeatation_deleted
          required: true
          schema:
            type: boolean
          description: whether repeatation is deleted or not
      responses:
        '204':
          description: Success
  /category/get:
    get:
      tags:
        - category
      summary: get all subcategory with their category name
      description: get all subcategory name and id with their category name and id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category.getSubCategoriesResponse'
  /category/post/category:
    post:
      tags:
        - category
      summary: post new category
      description: post new category
      requestBody:
        description: a new category
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category.postNewCategoryRequest'
      responses:
        '201':
          description: Created
  /category/post/subcategory:
    post:
      tags:
        - category
      summary: post new sub category
      description: post new sub category
      requestBody:
        description: a new sub category
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category.postNewSubCategoryRequest'
      responses:
        '201':
          description: Created
  /category/update/category:
    put:
      tags:
        - category
      summary: update category name
      description: update category name
      requestBody:
        description: category id and new category name
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category.updateCategoryRequest'
      responses:
        '202':
          description: Accepted
  /category/update/subcategory:
    put:
      tags:
        - category
      summary: update subcategory name
      description: update subcategory name
      requestBody:
        description: subcategory id and new subcategory name
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category.updateSubCategoryRequest'
      responses:
        '202':
          description: Accepted
  '/category/delete/category/{deleted_id}':
    delete:
      tags:
        - category
      summary: delete category
      description: delete category
      parameters:
        - in: path
          name: deleted_id
          required: true
          schema:
            type: string
          description: deleted category id
      responses:
        '202':
          description: Accepted
  '/category/delete/subcategory/{deleted_id}':
    delete:
      tags:
        - category
      summary: delete subcategory
      description: delete subcategory
      parameters:
        - in: path
          name: deleted_id
          required: true
          schema:
            type: string
          description: deleted subcategory id
      responses:
        '202':
          description: Accepted
components:
  schemas:
    test.postDataRequest:
      type: object
      properties:
        req:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
            required:
              - id
              - name
      required:
        - req
      example:
        - id: 1
          name: Tanaka
        - id: 2
          name: Nakano
    account.getRecordResponse:
      type: object
      properties:
        response:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              category_id:
                type: integer
              subcategory_id:
                type: integer
                nullable: true
              amount:
                type: integer
              description:
                type: string
              is_spending:
                type: boolean
              repeat_frequency:
                type: string
                nullable: true
              date:
                type: string
                format: date
              is_deleted:
                type: boolean
            required:
              - id
              - name
              - category_id
              - subcategory_id
              - amount
              - description
              - is_spending
              - repeat_frequency
              - date
              - is_deleted
      required:
        - response
      example:
        response:
          - id: 1
            name: book
            category_id: 1
            subcategory_id: 1
            amount: 1000
            description: book
            is_spending: true
            repeat_frequency: monthly
            date: '2020-01-01'
            is_deleted: false
          - id: 2
            name: fish
            category_id: 1
            subcategory_id: 2
            amount: 1000
            description: fish
            is_spending: true
            repeat_frequency: null
            date: '2020-01-01'
            is_deleted: false
    account.postRecordRequest:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          category_id:
            type: integer
          subcategory_id:
            type: integer
            nullable: true
          amount:
            type: integer
          description:
            type: string
          is_spending:
            type: boolean
          repeat_frequency:
            type: string
            nullable: true
          date:
            type: string
            format: date
          is_deleted:
            type: boolean
        required:
          - name
          - category_id
          - subcategory_id
          - amount
          - description
          - is_spending
          - repeat_frequency
          - date
          - is_deleted
    account.updateRecordRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category_id:
          type: integer
        subcategory_id:
          type: integer
          nullable: true
        amount:
          type: integer
        description:
          type: string
        is_spending:
          type: boolean
        repeat_frequency:
          type: string
          nullable: true
        date:
          type: string
          format: date
        is_deleted:
          type: boolean
      required:
        - id
        - name
        - category_id
        - subcategory_id
        - amount
        - description
        - is_spending
        - repeat_frequency
        - date
        - is_deleted
    category.getSubCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            type: object
            properties:
              category_id:
                type: integer
              category:
                type: string
              subcategories:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    subcategory:
                      type: string
                  required:
                    - id
                    - subcategory
            required:
              - category_id
              - category
              - subcategories
      required:
        - categories
    category.postNewCategoryRequest:
      type: object
      properties:
        id:
          type: integer
        category:
          type: string
      required:
        - id
        - category
    category.postNewSubCategoryRequest:
      type: object
      properties:
        id:
          type: integer
        subcategory:
          type: string
        category_id:
          type: integer
      required:
        - id
        - subcategory
        - category_id
    category.updateSubCategoryRequest:
      type: object
      properties:
        id:
          type: integer
        subcategory:
          type: string
        category_id:
          type: integer
      required:
        - id
        - subcategory
        - category_id
    category.updateCategoryRequest:
      type: object
      properties:
        id:
          type: integer
        category:
          type: string
      required:
        - id
        - category
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionId
servers:
  - url: '{server}'
    variables:
      server:
        default: 'http://localhost:8000'

