import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Component, ReactNode, useState } from 'react'
import styles from '../styles/Home.module.css'

/*
const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
export default Home
*/

const IndexPage = () => {
  const [my_num, set_my_num] = useState(10);
  
  const HandleClick = () => {
    set_my_num(my_num+1);
  };
  
  return(
     <div>
      <h1>Hello, Next.js</h1>
      <div>
        <img src="https://cdn2.thecatapi.com/images/bpc.jpg" />
        <div>
          <button onClick={HandleClick}>update the number</button>
        </div>
      </div>
     </div>
  );
};

class Todo extends Component {
  constructor(props){
    {/*super(props)はthis.propsを定義したりstateを使うための記述*/}
    super(props);
    this.state = {
      todos: [],
      name: String
    };
  }

  componentDidMount(): void {
    console.log("Hello")
  }

  componentWillUnmount(): void {
    console.log("Bye")
  }
  
  onInput = (e) =>{
    this.setState({
      name: e.target.value
    });
  }

  addTodo = () => {
    const { todos, name } = this.state;
    this.setState({
      todos: [...todos, name]
    });
  }

  removeTodo = (index) =>{
    const { todos, name } = this.state;
    this.setState({
      todos: [...todos.slice(0,index), ...todos.slice(index + 1)]
    });
  }

  render(): ReactNode {
    const { todos } = this.state;

    return(
      <div>
        <input type="text" onInput={this.onInput} />
        <button onClick={this.addTodo} >Register</button>
        <ul>
          {/*他に配列要素の識別子が存在しない時はindexを用いる*/}
          {/*liはリスト要素の標示。pは普通の表示？*/}
          {todos.map((todo, index) => <li key={index}>
            {todo}
            <button onClick={() => {this.removeTodo(index)}}>Remove</button>
          </li>)}
        </ul>
      </div>

    );
  }
}

export default Todo;